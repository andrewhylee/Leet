/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */

/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var reverseList = function (head) {
  console.log(head);
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DEBUG LINES //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// console.log("left :", left, "| mid: ", mid, "| right: ", right);
// console.log("nums[mid]: ", typeof nums[mid], "| target: ", typeof target);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Data Prep: Linked Nodes //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function ListNode(val, next) {
  this.val = val === undefined ? 0 : val;
  this.next = next === undefined ? null : next;
}

const head = ListNode(
  54,
  ListNode(43, ListNode(32, ListNode(21, ListNode(10))))
);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TESTING //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

console.log(reverseList(head));
